= AppleTV/Linux combo =

This take a little setup but might be worth it for some users. Here we are going to put both the AppleTV OS and Linux on an internal ATA disk. To boot Linux, we use a small USB pen drive with just atv-bootloader installed. When booting from the USB pen drive, it will search for GRUBs menu.lst and find it on the Linux partition on the internal ATA drive and boot it. Pull the USB pen drive and reboot -- presto back to the AppleTV OS.

Just for kicks we are also going to move from the standard 40GB 4200 rpm drive to a 100GB 7200 rpm drive. For reference.
{{{
"sdb" is the original AppleTV in a external USB enclosure
"sdc" is the new 100GB in a external USB enclosure
}}}

= Details =

Follow the LiveCD instructions but stop before the partition section.

Let's see how the original AppleTV drive is setup so we can copy the partitioning.
{{{
sudo parted /dev/sdb
}}}

Switch parted to sector display
{{{
(parted) unit s  
(parted) print
(parted) quit                                                         
}}}

You should see something similar but don't worry if the absolute sector numbers are diffferent.
{{{
Model: IC25N040 ATCS04-0 (scsi)
Disk /dev/sdb: 78140160s
Sector size (logical/physical): 512B/512B
Partition Table: gpt

Number  Start     End        Size       File system  Name      Flags  
 1      40s       69671s     69632s     fat32        EFI       boot   
 2      69672s    888823s    819152s    hfs+         Recovery  atvrecv
 3      888824s   2732015s   1843192s   hfs+         OSBoot           
 4      2732016s  77878015s  75146000s  hfs+         Media            
}}}

Now exit parted and gpt format the new disk
{{{
# always zero starting section of the disk first
sudo dd if=/dev/zero of=/dev/sdc bs=4096 count=1M
sudo parted -s /dev/sdc mklabel gpt
}}}

Run parted on the new disk to find the exact number of sectors.
{{{
sudo parted /dev/sdc
GNU Parted 1.8.8
Using /dev/sdc
Welcome to GNU Parted! Type 'help' to view a list of commands.
(parted) unit s                                                           
(parted) print                                                            
Model: ST910021  3MH0Y3XW (scsi)
Disk /dev/sdb: 195371568s
Sector size (logical/physical): 512B/512B
Partition Table: gpt

(parted) quit
}}}

This 100GB disk has 195371568 sectors but we can't use them all as GPT has a second partition table at the end that we do not want to overwrite. Subtract 97 from 195371568 gives 195371471 and that's our final end point. Create partitions on the new disk that match the AppleTV
{{{
# 1-EFI
sudo parted -s /dev/sdc mkpart primary fat32 40s 69671s
sudo parted -s /dev/sdc set 1 boot on

# 2-Recovery
sudo parted -s /dev/sdc mkpart primary HFS 69672s 888823s
sudo parted -s /dev/sdc set 2 atvrecv on

# 3-OSBoot
sudo parted -s /dev/sdc mkpart primary HFS 888824s 2732015s

# 4-Media
sudo parted -s /dev/sdc mkpart primary HFS 2732016s 77878015s
}}}

Add the Linux EXT3 and Swap. 
{{{
# 5-EXT3
sudo parted -s /dev/sdc mkpart primary ext3 77878016s 193323471s

# 6-Swap
sudo parted -s /dev/sdc mkpart primary linux-swap 193323472s 195371471s
}}}

Format the partitions, note that we are using journaled hfsplus to match the original disk format. When you format Swap, a disk UUID wil be returned, remember this UUID for later.
{{{
sudo mkfs.msdos -F 32 -n EFI /dev/sdb1
sudo mkfs.hfsplus -J -v Recovery /dev/sdb2
sudo mkfs.hfsplus -J -v OSBoot /dev/sdb3
sudo mkfs.hfsplus -J -v Media /dev/sdb4
sudo mkfs.ext3  -b 4096 -L Linux /dev/sdb5
sudo mkswap /dev/sdb6
Setting up swapspace version 1, size = 1048571 kB
no label, UUID=6dd96702-c8cb-491f-99fe-f35594dcf47f
}}}

Setup for the clone by making two mount points called "src" and "dst". The source partition gets mounted at "src", the destination gets mounted at "dst" and the contents get copied over. Repeat for each AppleTV partition except EFI. One thing to note here about mounting journaled hfsplus file systems. Linux will not normally mount a journaled hfsplus for write access. This is because the kernel hfsplus module is not capable of replaying the journal if the disk was not unmounted cleanly. Bad things happen when you write to an journaled file system that is "dirty". But the "fsck.hfsplus" from the hfs tools we built earler can replay the journal and fix any issues and then we can then we can safely force the mount read/write.
{{{
# make sure the original AppleTV has a clean file system
fsck.hfsplus /dev/sdb2
fsck.hfsplus /dev/sdb3
fsck.hfsplus /dev/sdb4

# create the mount points
mkdir src dst

# clone Recovery
sudo mount /dev/sdb2 src
sudo mount -o force /dev/sdc2 dst
cp -arp src/* dst/
umount src dst

# clone OSBoot
sudo mount /dev/sdb3 src
sudo mount -o force /dev/sdc3 dst
cp -arp src/* dst/
umount src dst

# clone Media
sudo mount /dev/sdb4 src
sudo mount -o force /dev/sdc4 dst
cp -arp src/* dst/
umount src dst
}}}

Now install Linux to /dev/sdc5 with swap on /dev/sdc6. Remember de-select any partitons other than sdc5 and sdc6 and run "gptsync" to fix up the MBR so efi firmware is happy.

Make a USB pen drive with just a recovery partition and the contents of recovery.tar.gz. 

After installing Linux to the new disk, re-install it into the AppleTV. 

Boot with USB pen removed -> AppleTV OS, 

boot with USB pen installed -> LInux.

You might have to force USB boot by holding the IR remote "menu" and "-" buttons down.

